/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.techishthoughts.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SocialConnection extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2478024458440240300L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SocialConnection\",\"namespace\":\"org.techishthoughts.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"platform\",\"type\":{\"type\":\"enum\",\"name\":\"SocialPlatform\",\"symbols\":[\"FACEBOOK\",\"TWITTER\",\"INSTAGRAM\",\"LINKEDIN\",\"GITHUB\",\"YOUTUBE\",\"TIKTOK\",\"DISCORD\"]}},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"profileUrl\",\"type\":\"string\"},{\"name\":\"isVerified\",\"type\":\"boolean\"},{\"name\":\"followerCount\",\"type\":\"long\"},{\"name\":\"connectedAt\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lastSyncAt\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"additionalData\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SocialConnection> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SocialConnection> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SocialConnection> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SocialConnection> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SocialConnection> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SocialConnection to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SocialConnection from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SocialConnection instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SocialConnection fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long id;
  private org.techishthoughts.avro.model.SocialPlatform platform;
  private java.lang.CharSequence username;
  private java.lang.CharSequence profileUrl;
  private boolean isVerified;
  private long followerCount;
  private java.lang.Long connectedAt;
  private java.lang.Long lastSyncAt;
  private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additionalData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SocialConnection() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param platform The new value for platform
   * @param username The new value for username
   * @param profileUrl The new value for profileUrl
   * @param isVerified The new value for isVerified
   * @param followerCount The new value for followerCount
   * @param connectedAt The new value for connectedAt
   * @param lastSyncAt The new value for lastSyncAt
   * @param additionalData The new value for additionalData
   */
  public SocialConnection(java.lang.Long id, org.techishthoughts.avro.model.SocialPlatform platform, java.lang.CharSequence username, java.lang.CharSequence profileUrl, java.lang.Boolean isVerified, java.lang.Long followerCount, java.lang.Long connectedAt, java.lang.Long lastSyncAt, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additionalData) {
    this.id = id;
    this.platform = platform;
    this.username = username;
    this.profileUrl = profileUrl;
    this.isVerified = isVerified;
    this.followerCount = followerCount;
    this.connectedAt = connectedAt;
    this.lastSyncAt = lastSyncAt;
    this.additionalData = additionalData;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return platform;
    case 2: return username;
    case 3: return profileUrl;
    case 4: return isVerified;
    case 5: return followerCount;
    case 6: return connectedAt;
    case 7: return lastSyncAt;
    case 8: return additionalData;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: platform = (org.techishthoughts.avro.model.SocialPlatform)value$; break;
    case 2: username = (java.lang.CharSequence)value$; break;
    case 3: profileUrl = (java.lang.CharSequence)value$; break;
    case 4: isVerified = (java.lang.Boolean)value$; break;
    case 5: followerCount = (java.lang.Long)value$; break;
    case 6: connectedAt = (java.lang.Long)value$; break;
    case 7: lastSyncAt = (java.lang.Long)value$; break;
    case 8: additionalData = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'platform' field.
   * @return The value of the 'platform' field.
   */
  public org.techishthoughts.avro.model.SocialPlatform getPlatform() {
    return platform;
  }


  /**
   * Sets the value of the 'platform' field.
   * @param value the value to set.
   */
  public void setPlatform(org.techishthoughts.avro.model.SocialPlatform value) {
    this.platform = value;
  }

  /**
   * Gets the value of the 'username' field.
   * @return The value of the 'username' field.
   */
  public java.lang.CharSequence getUsername() {
    return username;
  }


  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.CharSequence value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'profileUrl' field.
   * @return The value of the 'profileUrl' field.
   */
  public java.lang.CharSequence getProfileUrl() {
    return profileUrl;
  }


  /**
   * Sets the value of the 'profileUrl' field.
   * @param value the value to set.
   */
  public void setProfileUrl(java.lang.CharSequence value) {
    this.profileUrl = value;
  }

  /**
   * Gets the value of the 'isVerified' field.
   * @return The value of the 'isVerified' field.
   */
  public boolean getIsVerified() {
    return isVerified;
  }


  /**
   * Sets the value of the 'isVerified' field.
   * @param value the value to set.
   */
  public void setIsVerified(boolean value) {
    this.isVerified = value;
  }

  /**
   * Gets the value of the 'followerCount' field.
   * @return The value of the 'followerCount' field.
   */
  public long getFollowerCount() {
    return followerCount;
  }


  /**
   * Sets the value of the 'followerCount' field.
   * @param value the value to set.
   */
  public void setFollowerCount(long value) {
    this.followerCount = value;
  }

  /**
   * Gets the value of the 'connectedAt' field.
   * @return The value of the 'connectedAt' field.
   */
  public java.lang.Long getConnectedAt() {
    return connectedAt;
  }


  /**
   * Sets the value of the 'connectedAt' field.
   * @param value the value to set.
   */
  public void setConnectedAt(java.lang.Long value) {
    this.connectedAt = value;
  }

  /**
   * Gets the value of the 'lastSyncAt' field.
   * @return The value of the 'lastSyncAt' field.
   */
  public java.lang.Long getLastSyncAt() {
    return lastSyncAt;
  }


  /**
   * Sets the value of the 'lastSyncAt' field.
   * @param value the value to set.
   */
  public void setLastSyncAt(java.lang.Long value) {
    this.lastSyncAt = value;
  }

  /**
   * Gets the value of the 'additionalData' field.
   * @return The value of the 'additionalData' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAdditionalData() {
    return additionalData;
  }


  /**
   * Sets the value of the 'additionalData' field.
   * @param value the value to set.
   */
  public void setAdditionalData(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.additionalData = value;
  }

  /**
   * Creates a new SocialConnection RecordBuilder.
   * @return A new SocialConnection RecordBuilder
   */
  public static org.techishthoughts.avro.model.SocialConnection.Builder newBuilder() {
    return new org.techishthoughts.avro.model.SocialConnection.Builder();
  }

  /**
   * Creates a new SocialConnection RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SocialConnection RecordBuilder
   */
  public static org.techishthoughts.avro.model.SocialConnection.Builder newBuilder(org.techishthoughts.avro.model.SocialConnection.Builder other) {
    if (other == null) {
      return new org.techishthoughts.avro.model.SocialConnection.Builder();
    } else {
      return new org.techishthoughts.avro.model.SocialConnection.Builder(other);
    }
  }

  /**
   * Creates a new SocialConnection RecordBuilder by copying an existing SocialConnection instance.
   * @param other The existing instance to copy.
   * @return A new SocialConnection RecordBuilder
   */
  public static org.techishthoughts.avro.model.SocialConnection.Builder newBuilder(org.techishthoughts.avro.model.SocialConnection other) {
    if (other == null) {
      return new org.techishthoughts.avro.model.SocialConnection.Builder();
    } else {
      return new org.techishthoughts.avro.model.SocialConnection.Builder(other);
    }
  }

  /**
   * RecordBuilder for SocialConnection instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SocialConnection>
    implements org.apache.avro.data.RecordBuilder<SocialConnection> {

    private long id;
    private org.techishthoughts.avro.model.SocialPlatform platform;
    private java.lang.CharSequence username;
    private java.lang.CharSequence profileUrl;
    private boolean isVerified;
    private long followerCount;
    private java.lang.Long connectedAt;
    private java.lang.Long lastSyncAt;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> additionalData;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.techishthoughts.avro.model.SocialConnection.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.platform)) {
        this.platform = data().deepCopy(fields()[1].schema(), other.platform);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.username)) {
        this.username = data().deepCopy(fields()[2].schema(), other.username);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.profileUrl)) {
        this.profileUrl = data().deepCopy(fields()[3].schema(), other.profileUrl);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.isVerified)) {
        this.isVerified = data().deepCopy(fields()[4].schema(), other.isVerified);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.followerCount)) {
        this.followerCount = data().deepCopy(fields()[5].schema(), other.followerCount);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.connectedAt)) {
        this.connectedAt = data().deepCopy(fields()[6].schema(), other.connectedAt);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.lastSyncAt)) {
        this.lastSyncAt = data().deepCopy(fields()[7].schema(), other.lastSyncAt);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.additionalData)) {
        this.additionalData = data().deepCopy(fields()[8].schema(), other.additionalData);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing SocialConnection instance
     * @param other The existing instance to copy.
     */
    private Builder(org.techishthoughts.avro.model.SocialConnection other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.platform)) {
        this.platform = data().deepCopy(fields()[1].schema(), other.platform);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.username)) {
        this.username = data().deepCopy(fields()[2].schema(), other.username);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.profileUrl)) {
        this.profileUrl = data().deepCopy(fields()[3].schema(), other.profileUrl);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isVerified)) {
        this.isVerified = data().deepCopy(fields()[4].schema(), other.isVerified);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.followerCount)) {
        this.followerCount = data().deepCopy(fields()[5].schema(), other.followerCount);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.connectedAt)) {
        this.connectedAt = data().deepCopy(fields()[6].schema(), other.connectedAt);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lastSyncAt)) {
        this.lastSyncAt = data().deepCopy(fields()[7].schema(), other.lastSyncAt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.additionalData)) {
        this.additionalData = data().deepCopy(fields()[8].schema(), other.additionalData);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'platform' field.
      * @return The value.
      */
    public org.techishthoughts.avro.model.SocialPlatform getPlatform() {
      return platform;
    }


    /**
      * Sets the value of the 'platform' field.
      * @param value The value of 'platform'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setPlatform(org.techishthoughts.avro.model.SocialPlatform value) {
      validate(fields()[1], value);
      this.platform = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'platform' field has been set.
      * @return True if the 'platform' field has been set, false otherwise.
      */
    public boolean hasPlatform() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'platform' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearPlatform() {
      platform = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'username' field.
      * @return The value.
      */
    public java.lang.CharSequence getUsername() {
      return username;
    }


    /**
      * Sets the value of the 'username' field.
      * @param value The value of 'username'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setUsername(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.username = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'username' field has been set.
      * @return True if the 'username' field has been set, false otherwise.
      */
    public boolean hasUsername() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'username' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearUsername() {
      username = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'profileUrl' field.
      * @return The value.
      */
    public java.lang.CharSequence getProfileUrl() {
      return profileUrl;
    }


    /**
      * Sets the value of the 'profileUrl' field.
      * @param value The value of 'profileUrl'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setProfileUrl(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.profileUrl = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'profileUrl' field has been set.
      * @return True if the 'profileUrl' field has been set, false otherwise.
      */
    public boolean hasProfileUrl() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'profileUrl' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearProfileUrl() {
      profileUrl = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'isVerified' field.
      * @return The value.
      */
    public boolean getIsVerified() {
      return isVerified;
    }


    /**
      * Sets the value of the 'isVerified' field.
      * @param value The value of 'isVerified'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setIsVerified(boolean value) {
      validate(fields()[4], value);
      this.isVerified = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'isVerified' field has been set.
      * @return True if the 'isVerified' field has been set, false otherwise.
      */
    public boolean hasIsVerified() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'isVerified' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearIsVerified() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'followerCount' field.
      * @return The value.
      */
    public long getFollowerCount() {
      return followerCount;
    }


    /**
      * Sets the value of the 'followerCount' field.
      * @param value The value of 'followerCount'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setFollowerCount(long value) {
      validate(fields()[5], value);
      this.followerCount = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'followerCount' field has been set.
      * @return True if the 'followerCount' field has been set, false otherwise.
      */
    public boolean hasFollowerCount() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'followerCount' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearFollowerCount() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'connectedAt' field.
      * @return The value.
      */
    public java.lang.Long getConnectedAt() {
      return connectedAt;
    }


    /**
      * Sets the value of the 'connectedAt' field.
      * @param value The value of 'connectedAt'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setConnectedAt(java.lang.Long value) {
      validate(fields()[6], value);
      this.connectedAt = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'connectedAt' field has been set.
      * @return True if the 'connectedAt' field has been set, false otherwise.
      */
    public boolean hasConnectedAt() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'connectedAt' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearConnectedAt() {
      connectedAt = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastSyncAt' field.
      * @return The value.
      */
    public java.lang.Long getLastSyncAt() {
      return lastSyncAt;
    }


    /**
      * Sets the value of the 'lastSyncAt' field.
      * @param value The value of 'lastSyncAt'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setLastSyncAt(java.lang.Long value) {
      validate(fields()[7], value);
      this.lastSyncAt = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'lastSyncAt' field has been set.
      * @return True if the 'lastSyncAt' field has been set, false otherwise.
      */
    public boolean hasLastSyncAt() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'lastSyncAt' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearLastSyncAt() {
      lastSyncAt = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'additionalData' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAdditionalData() {
      return additionalData;
    }


    /**
      * Sets the value of the 'additionalData' field.
      * @param value The value of 'additionalData'.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder setAdditionalData(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[8], value);
      this.additionalData = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'additionalData' field has been set.
      * @return True if the 'additionalData' field has been set, false otherwise.
      */
    public boolean hasAdditionalData() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'additionalData' field.
      * @return This builder.
      */
    public org.techishthoughts.avro.model.SocialConnection.Builder clearAdditionalData() {
      additionalData = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SocialConnection build() {
      try {
        SocialConnection record = new SocialConnection();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.platform = fieldSetFlags()[1] ? this.platform : (org.techishthoughts.avro.model.SocialPlatform) defaultValue(fields()[1]);
        record.username = fieldSetFlags()[2] ? this.username : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.profileUrl = fieldSetFlags()[3] ? this.profileUrl : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.isVerified = fieldSetFlags()[4] ? this.isVerified : (java.lang.Boolean) defaultValue(fields()[4]);
        record.followerCount = fieldSetFlags()[5] ? this.followerCount : (java.lang.Long) defaultValue(fields()[5]);
        record.connectedAt = fieldSetFlags()[6] ? this.connectedAt : (java.lang.Long) defaultValue(fields()[6]);
        record.lastSyncAt = fieldSetFlags()[7] ? this.lastSyncAt : (java.lang.Long) defaultValue(fields()[7]);
        record.additionalData = fieldSetFlags()[8] ? this.additionalData : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SocialConnection>
    WRITER$ = (org.apache.avro.io.DatumWriter<SocialConnection>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SocialConnection>
    READER$ = (org.apache.avro.io.DatumReader<SocialConnection>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.id);

    out.writeEnum(this.platform.ordinal());

    out.writeString(this.username);

    out.writeString(this.profileUrl);

    out.writeBoolean(this.isVerified);

    out.writeLong(this.followerCount);

    if (this.connectedAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.connectedAt);
    }

    if (this.lastSyncAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.lastSyncAt);
    }

    long size0 = this.additionalData.size();
    out.writeMapStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.util.Map.Entry<java.lang.CharSequence, java.lang.CharSequence> e0: this.additionalData.entrySet()) {
      actualSize0++;
      out.startItem();
      out.writeString(e0.getKey());
      java.lang.CharSequence v0 = e0.getValue();
      out.writeString(v0);
    }
    out.writeMapEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readLong();

      this.platform = org.techishthoughts.avro.model.SocialPlatform.values()[in.readEnum()];

      this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);

      this.profileUrl = in.readString(this.profileUrl instanceof Utf8 ? (Utf8)this.profileUrl : null);

      this.isVerified = in.readBoolean();

      this.followerCount = in.readLong();

      if (in.readIndex() != 1) {
        in.readNull();
        this.connectedAt = null;
      } else {
        this.connectedAt = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastSyncAt = null;
      } else {
        this.lastSyncAt = in.readLong();
      }

      long size0 = in.readMapStart();
      java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m0 = this.additionalData; // Need fresh name due to limitation of macro system
      if (m0 == null) {
        m0 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size0);
        this.additionalData = m0;
      } else m0.clear();
      for ( ; 0 < size0; size0 = in.mapNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence k0 = null;
          k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
          java.lang.CharSequence v0 = null;
          v0 = in.readString(v0 instanceof Utf8 ? (Utf8)v0 : null);
          m0.put(k0, v0);
        }
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readLong();
          break;

        case 1:
          this.platform = org.techishthoughts.avro.model.SocialPlatform.values()[in.readEnum()];
          break;

        case 2:
          this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);
          break;

        case 3:
          this.profileUrl = in.readString(this.profileUrl instanceof Utf8 ? (Utf8)this.profileUrl : null);
          break;

        case 4:
          this.isVerified = in.readBoolean();
          break;

        case 5:
          this.followerCount = in.readLong();
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.connectedAt = null;
          } else {
            this.connectedAt = in.readLong();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lastSyncAt = null;
          } else {
            this.lastSyncAt = in.readLong();
          }
          break;

        case 8:
          long size0 = in.readMapStart();
          java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m0 = this.additionalData; // Need fresh name due to limitation of macro system
          if (m0 == null) {
            m0 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size0);
            this.additionalData = m0;
          } else m0.clear();
          for ( ; 0 < size0; size0 = in.mapNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence k0 = null;
              k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
              java.lang.CharSequence v0 = null;
              v0 = in.readString(v0 instanceof Utf8 ? (Utf8)v0 : null);
              m0.put(k0, v0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










