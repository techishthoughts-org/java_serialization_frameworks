server:
  port: 8083
  http2:
    enabled: true
  http3:
    enabled: true
    port: 8443
  ssl:
    enabled: false
    key-store: classpath:keystore.p12
    key-store-password: ${KEYSTORE_PASSWORD:changeit}
    key-store-type: PKCS12
    protocols: TLSv1.3
    ciphers:
      - TLS_AES_256_GCM_SHA384
      - TLS_CHACHA20_POLY1305_SHA256
    alpn:
      enabled: true
      protocols: h3, h2, http/1.1
  compression:
    enabled: true
    mime-types:
      - application/avro
      - application/json
    min-response-size: 1024
    http2:
      enabled: true
    http3:
      enabled: true

spring:
  application:
    name: avro-poc
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: avro-consumer-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://localhost:8081

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.example.avro: DEBUG
    org.apache.avro: INFO
    org.springframework.kafka: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
