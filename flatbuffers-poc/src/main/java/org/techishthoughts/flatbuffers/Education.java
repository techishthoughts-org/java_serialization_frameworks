// automatically generated by the FlatBuffers compiler, do not modify

package org.techishthoughts.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Education extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static Education getRootAsEducation(ByteBuffer _bb) { return getRootAsEducation(_bb, new Education()); }
  public static Education getRootAsEducation(ByteBuffer _bb, Education obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Education __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long id() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateId(long id) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, id); return true; } else { return false; } }
  public String institution() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer institutionAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer institutionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String degree() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer degreeAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer degreeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String fieldOfStudy() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer fieldOfStudyAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer fieldOfStudyInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public String startDate() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer startDateAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer startDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public String endDate() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer endDateAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer endDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  public float gpa() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public boolean mutateGpa(float gpa) { int o = __offset(16); if (o != 0) { bb.putFloat(o + bb_pos, gpa); return true; } else { return false; } }
  public String description() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer descriptionAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer descriptionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }

  public static int createEducation(FlatBufferBuilder builder,
      long id,
      int institutionOffset,
      int degreeOffset,
      int fieldOfStudyOffset,
      int startDateOffset,
      int endDateOffset,
      float gpa,
      int descriptionOffset) {
    builder.startTable(8);
    Education.addId(builder, id);
    Education.addDescription(builder, descriptionOffset);
    Education.addGpa(builder, gpa);
    Education.addEndDate(builder, endDateOffset);
    Education.addStartDate(builder, startDateOffset);
    Education.addFieldOfStudy(builder, fieldOfStudyOffset);
    Education.addDegree(builder, degreeOffset);
    Education.addInstitution(builder, institutionOffset);
    return Education.endEducation(builder);
  }

  public static void startEducation(FlatBufferBuilder builder) { builder.startTable(8); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addLong(0, id, 0L); }
  public static void addInstitution(FlatBufferBuilder builder, int institutionOffset) { builder.addOffset(1, institutionOffset, 0); }
  public static void addDegree(FlatBufferBuilder builder, int degreeOffset) { builder.addOffset(2, degreeOffset, 0); }
  public static void addFieldOfStudy(FlatBufferBuilder builder, int fieldOfStudyOffset) { builder.addOffset(3, fieldOfStudyOffset, 0); }
  public static void addStartDate(FlatBufferBuilder builder, int startDateOffset) { builder.addOffset(4, startDateOffset, 0); }
  public static void addEndDate(FlatBufferBuilder builder, int endDateOffset) { builder.addOffset(5, endDateOffset, 0); }
  public static void addGpa(FlatBufferBuilder builder, float gpa) { builder.addFloat(6, gpa, 0.0f); }
  public static void addDescription(FlatBufferBuilder builder, int descriptionOffset) { builder.addOffset(7, descriptionOffset, 0); }
  public static int endEducation(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Education get(int j) { return get(new Education(), j); }
    public Education get(Education obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

