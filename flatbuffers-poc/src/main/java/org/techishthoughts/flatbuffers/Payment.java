// automatically generated by the FlatBuffers compiler, do not modify

package org.techishthoughts.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Payment extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_25_2_10(); }
  public static Payment getRootAsPayment(ByteBuffer _bb) { return getRootAsPayment(_bb, new Payment()); }
  public static Payment getRootAsPayment(ByteBuffer _bb, Payment obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Payment __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long id() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean mutateId(long id) { int o = __offset(4); if (o != 0) { bb.putLong(o + bb_pos, id); return true; } else { return false; } }
  public double amount() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public boolean mutateAmount(double amount) { int o = __offset(6); if (o != 0) { bb.putDouble(o + bb_pos, amount); return true; } else { return false; } }
  public String currency() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer currencyAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer currencyInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public byte method() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public boolean mutateMethod(byte method) { int o = __offset(10); if (o != 0) { bb.put(o + bb_pos, method); return true; } else { return false; } }
  public byte status() { int o = __offset(12); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public boolean mutateStatus(byte status) { int o = __offset(12); if (o != 0) { bb.put(o + bb_pos, status); return true; } else { return false; } }
  public String transactionId() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer transactionIdAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer transactionIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  public String timestamp() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer timestampAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer timestampInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }

  public static int createPayment(FlatBufferBuilder builder,
      long id,
      double amount,
      int currencyOffset,
      byte method,
      byte status,
      int transactionIdOffset,
      int timestampOffset) {
    builder.startTable(7);
    Payment.addAmount(builder, amount);
    Payment.addId(builder, id);
    Payment.addTimestamp(builder, timestampOffset);
    Payment.addTransactionId(builder, transactionIdOffset);
    Payment.addCurrency(builder, currencyOffset);
    Payment.addStatus(builder, status);
    Payment.addMethod(builder, method);
    return Payment.endPayment(builder);
  }

  public static void startPayment(FlatBufferBuilder builder) { builder.startTable(7); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addLong(0, id, 0L); }
  public static void addAmount(FlatBufferBuilder builder, double amount) { builder.addDouble(1, amount, 0.0); }
  public static void addCurrency(FlatBufferBuilder builder, int currencyOffset) { builder.addOffset(2, currencyOffset, 0); }
  public static void addMethod(FlatBufferBuilder builder, byte method) { builder.addByte(3, method, 0); }
  public static void addStatus(FlatBufferBuilder builder, byte status) { builder.addByte(4, status, 0); }
  public static void addTransactionId(FlatBufferBuilder builder, int transactionIdOffset) { builder.addOffset(5, transactionIdOffset, 0); }
  public static void addTimestamp(FlatBufferBuilder builder, int timestampOffset) { builder.addOffset(6, timestampOffset, 0); }
  public static int endPayment(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Payment get(int j) { return get(new Payment(), j); }
    public Payment get(Payment obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

